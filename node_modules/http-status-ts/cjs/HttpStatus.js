"use strict";
var _a;
Object.defineProperty(exports, "__esModule", { value: true });
exports.httpStatusTextByCode = exports.HttpStatus = void 0;
// https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml
var HttpStatus;
(function (HttpStatus) {
    HttpStatus[HttpStatus["CONTINUE"] = 100] = "CONTINUE";
    HttpStatus[HttpStatus["SWITCHING_PROTOCOLS"] = 101] = "SWITCHING_PROTOCOLS";
    HttpStatus[HttpStatus["PROCESSING"] = 102] = "PROCESSING";
    HttpStatus[HttpStatus["EARLY_HINTS"] = 103] = "EARLY_HINTS";
    HttpStatus[HttpStatus["OK"] = 200] = "OK";
    HttpStatus[HttpStatus["CREATED"] = 201] = "CREATED";
    HttpStatus[HttpStatus["ACCEPTED"] = 202] = "ACCEPTED";
    HttpStatus[HttpStatus["NON_AUTHORITATIVE_INFORMATION"] = 203] = "NON_AUTHORITATIVE_INFORMATION";
    HttpStatus[HttpStatus["NO_CONTENT"] = 204] = "NO_CONTENT";
    HttpStatus[HttpStatus["RESET_CONTENT"] = 205] = "RESET_CONTENT";
    HttpStatus[HttpStatus["PARTIAL_CONTENT"] = 206] = "PARTIAL_CONTENT";
    HttpStatus[HttpStatus["MULTI_STATUS"] = 207] = "MULTI_STATUS";
    HttpStatus[HttpStatus["ALREADY_REPORTED"] = 208] = "ALREADY_REPORTED";
    HttpStatus[HttpStatus["IM_USED"] = 226] = "IM_USED";
    HttpStatus[HttpStatus["MULTIPLE_CHOICES"] = 300] = "MULTIPLE_CHOICES";
    HttpStatus[HttpStatus["MOVED_PERMANENTLY"] = 301] = "MOVED_PERMANENTLY";
    HttpStatus[HttpStatus["FOUND"] = 302] = "FOUND";
    HttpStatus[HttpStatus["SEE_OTHER"] = 303] = "SEE_OTHER";
    HttpStatus[HttpStatus["NOT_MODIFIED"] = 304] = "NOT_MODIFIED";
    HttpStatus[HttpStatus["USE_PROXY"] = 305] = "USE_PROXY";
    HttpStatus[HttpStatus["TEMPORARY_REDIRECT"] = 307] = "TEMPORARY_REDIRECT";
    HttpStatus[HttpStatus["PERMANENT_REDIRECT"] = 308] = "PERMANENT_REDIRECT";
    HttpStatus[HttpStatus["BAD_REQUEST"] = 400] = "BAD_REQUEST";
    HttpStatus[HttpStatus["UNAUTHORIZED"] = 401] = "UNAUTHORIZED";
    HttpStatus[HttpStatus["PAYMENT_REQUIRED"] = 402] = "PAYMENT_REQUIRED";
    HttpStatus[HttpStatus["FORBIDDEN"] = 403] = "FORBIDDEN";
    HttpStatus[HttpStatus["NOT_FOUND"] = 404] = "NOT_FOUND";
    HttpStatus[HttpStatus["METHOD_NOT_ALLOWED"] = 405] = "METHOD_NOT_ALLOWED";
    HttpStatus[HttpStatus["NOT_ACCEPTABLE"] = 406] = "NOT_ACCEPTABLE";
    HttpStatus[HttpStatus["PROXY_AUTHENTICATION_REQUIRED"] = 407] = "PROXY_AUTHENTICATION_REQUIRED";
    HttpStatus[HttpStatus["REQUEST_TIMEOUT"] = 408] = "REQUEST_TIMEOUT";
    HttpStatus[HttpStatus["CONFLICT"] = 409] = "CONFLICT";
    HttpStatus[HttpStatus["GONE"] = 410] = "GONE";
    HttpStatus[HttpStatus["LENGTH_REQUIRED"] = 411] = "LENGTH_REQUIRED";
    HttpStatus[HttpStatus["PRECONDITION_FAILED"] = 412] = "PRECONDITION_FAILED";
    HttpStatus[HttpStatus["PAYLOAD_TOO_LARGE"] = 413] = "PAYLOAD_TOO_LARGE";
    HttpStatus[HttpStatus["URI_TOO_LONG"] = 414] = "URI_TOO_LONG";
    HttpStatus[HttpStatus["UNSUPPORTED_MEDIA_TYPE"] = 415] = "UNSUPPORTED_MEDIA_TYPE";
    HttpStatus[HttpStatus["RANGE_NOT_SATISFIABLE"] = 416] = "RANGE_NOT_SATISFIABLE";
    HttpStatus[HttpStatus["EXPECTATION_FAILED"] = 417] = "EXPECTATION_FAILED";
    HttpStatus[HttpStatus["MISDIRECTED_REQUEST"] = 421] = "MISDIRECTED_REQUEST";
    HttpStatus[HttpStatus["UNPROCESSABLE_ENTITY"] = 422] = "UNPROCESSABLE_ENTITY";
    HttpStatus[HttpStatus["LOCKED"] = 423] = "LOCKED";
    HttpStatus[HttpStatus["FAILED_DEPENDENCY"] = 424] = "FAILED_DEPENDENCY";
    HttpStatus[HttpStatus["TOO_EARLY"] = 425] = "TOO_EARLY";
    HttpStatus[HttpStatus["UPGRADE_REQUIRED"] = 426] = "UPGRADE_REQUIRED";
    HttpStatus[HttpStatus["PRECONDITION_REQUIRED"] = 428] = "PRECONDITION_REQUIRED";
    HttpStatus[HttpStatus["TOO_MANY_REQUESTS"] = 429] = "TOO_MANY_REQUESTS";
    HttpStatus[HttpStatus["REQUEST_HEADER_FIELDS_TOO_LARGE"] = 431] = "REQUEST_HEADER_FIELDS_TOO_LARGE";
    HttpStatus[HttpStatus["UNAVAILABLE_FOR_LEGAL_REASONS"] = 451] = "UNAVAILABLE_FOR_LEGAL_REASONS";
    HttpStatus[HttpStatus["INTERNAL_SERVER_ERROR"] = 500] = "INTERNAL_SERVER_ERROR";
    HttpStatus[HttpStatus["NOT_IMPLEMENTED"] = 501] = "NOT_IMPLEMENTED";
    HttpStatus[HttpStatus["BAD_GATEWAY"] = 502] = "BAD_GATEWAY";
    HttpStatus[HttpStatus["SERVICE_UNAVAILABLE"] = 503] = "SERVICE_UNAVAILABLE";
    HttpStatus[HttpStatus["GATEWAY_TIMEOUT"] = 504] = "GATEWAY_TIMEOUT";
    HttpStatus[HttpStatus["HTTP_VERSION_NOT_SUPPORTED"] = 505] = "HTTP_VERSION_NOT_SUPPORTED";
    HttpStatus[HttpStatus["VARIANT_ALSO_NEGOTIATES"] = 506] = "VARIANT_ALSO_NEGOTIATES";
    HttpStatus[HttpStatus["INSUFFICIENT_STORAGE"] = 507] = "INSUFFICIENT_STORAGE";
    HttpStatus[HttpStatus["LOOP_DETECTED"] = 508] = "LOOP_DETECTED";
    HttpStatus[HttpStatus["NOT_EXTENDED"] = 510] = "NOT_EXTENDED";
    HttpStatus[HttpStatus["NETWORK_AUTHENTICATION_REQUIRED"] = 511] = "NETWORK_AUTHENTICATION_REQUIRED";
})(HttpStatus || (exports.HttpStatus = HttpStatus = {}));
var httpStatusText = (_a = {},
    _a[HttpStatus.CONTINUE] = "Continue",
    _a[HttpStatus.SWITCHING_PROTOCOLS] = "Switching Protocols",
    _a[HttpStatus.PROCESSING] = "Processing",
    _a[HttpStatus.EARLY_HINTS] = "Early Hints",
    _a[HttpStatus.OK] = "OK",
    _a[HttpStatus.CREATED] = "Created",
    _a[HttpStatus.ACCEPTED] = "Accepted",
    _a[HttpStatus.NON_AUTHORITATIVE_INFORMATION] = "Non-Authoritative Information",
    _a[HttpStatus.NO_CONTENT] = "No Content",
    _a[HttpStatus.RESET_CONTENT] = "Reset Content",
    _a[HttpStatus.PARTIAL_CONTENT] = "Partial Content",
    _a[HttpStatus.MULTI_STATUS] = "Multi-Status",
    _a[HttpStatus.ALREADY_REPORTED] = "Already Reported",
    _a[HttpStatus.IM_USED] = "IM Used",
    _a[HttpStatus.MULTIPLE_CHOICES] = "Multiple Choices",
    _a[HttpStatus.MOVED_PERMANENTLY] = "Moved Permanently",
    _a[HttpStatus.FOUND] = "Found",
    _a[HttpStatus.SEE_OTHER] = "See Other",
    _a[HttpStatus.NOT_MODIFIED] = "Not Modified",
    _a[HttpStatus.USE_PROXY] = "Use Proxy",
    _a[HttpStatus.TEMPORARY_REDIRECT] = "Temporary Redirect",
    _a[HttpStatus.PERMANENT_REDIRECT] = "Permanent Redirect",
    _a[HttpStatus.BAD_REQUEST] = "Bad Request",
    _a[HttpStatus.UNAUTHORIZED] = "Unauthorized",
    _a[HttpStatus.PAYMENT_REQUIRED] = "Payment Required",
    _a[HttpStatus.FORBIDDEN] = "Forbidden",
    _a[HttpStatus.NOT_FOUND] = "Not Found",
    _a[HttpStatus.METHOD_NOT_ALLOWED] = "Method Not Allowed",
    _a[HttpStatus.NOT_ACCEPTABLE] = "Not Acceptable",
    _a[HttpStatus.PROXY_AUTHENTICATION_REQUIRED] = "Proxy Authentication Required",
    _a[HttpStatus.REQUEST_TIMEOUT] = "Request Timeout",
    _a[HttpStatus.CONFLICT] = "Conflict",
    _a[HttpStatus.GONE] = "Gone",
    _a[HttpStatus.LENGTH_REQUIRED] = "Length Required",
    _a[HttpStatus.PRECONDITION_FAILED] = "Precondition Failed",
    _a[HttpStatus.PAYLOAD_TOO_LARGE] = "Payload Too Large",
    _a[HttpStatus.URI_TOO_LONG] = "URI Too Long",
    _a[HttpStatus.UNSUPPORTED_MEDIA_TYPE] = "Unsupported Media Type",
    _a[HttpStatus.RANGE_NOT_SATISFIABLE] = "Range Not Satisfiable",
    _a[HttpStatus.EXPECTATION_FAILED] = "Expectation Failed",
    _a[HttpStatus.MISDIRECTED_REQUEST] = "Misdirected Request",
    _a[HttpStatus.UNPROCESSABLE_ENTITY] = "Unprocessable Entity",
    _a[HttpStatus.LOCKED] = "Locked",
    _a[HttpStatus.FAILED_DEPENDENCY] = "Failed Dependency",
    _a[HttpStatus.TOO_EARLY] = "Too Early",
    _a[HttpStatus.UPGRADE_REQUIRED] = "Upgrade Required",
    _a[HttpStatus.PRECONDITION_REQUIRED] = "Precondition Required",
    _a[HttpStatus.TOO_MANY_REQUESTS] = "Too Many Requests",
    _a[HttpStatus.REQUEST_HEADER_FIELDS_TOO_LARGE] = "Request Header Fields Too Large",
    _a[HttpStatus.UNAVAILABLE_FOR_LEGAL_REASONS] = "Unavailable For Legal Reasons",
    _a[HttpStatus.INTERNAL_SERVER_ERROR] = "Internal Server Error",
    _a[HttpStatus.NOT_IMPLEMENTED] = "Not Implemented",
    _a[HttpStatus.BAD_GATEWAY] = "Bad Gateway",
    _a[HttpStatus.SERVICE_UNAVAILABLE] = "Service Unavailable",
    _a[HttpStatus.GATEWAY_TIMEOUT] = "Gateway Timeout",
    _a[HttpStatus.HTTP_VERSION_NOT_SUPPORTED] = "HTTP Version Not Supported",
    _a[HttpStatus.VARIANT_ALSO_NEGOTIATES] = "Variant Also Negotiates",
    _a[HttpStatus.INSUFFICIENT_STORAGE] = "Insufficient Storage",
    _a[HttpStatus.LOOP_DETECTED] = "Loop Detected",
    _a[HttpStatus.NOT_EXTENDED] = "Not Extended",
    _a[HttpStatus.NETWORK_AUTHENTICATION_REQUIRED] = "Network Authentication Required",
    _a);
function httpStatusTextByCode(httpStatusCode) {
    if (!httpStatusCode || !httpStatusCode.toString) {
        // Not a number or a string
        throw new Error("Invalid httpStatusCode");
    }
    for (var _i = 0, _a = Object.keys(httpStatusText); _i < _a.length; _i++) {
        var key = _a[_i];
        if (key === httpStatusCode.toString()) {
            return httpStatusText[key];
        }
    }
    throw new Error("Invalid httpStatusCode");
}
exports.httpStatusTextByCode = httpStatusTextByCode;
//# sourceMappingURL=HttpStatus.js.map